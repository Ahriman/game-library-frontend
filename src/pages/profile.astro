---
import Layout from '@/layouts/Layout.astro';
import { API_BASE_URL } from '@/config/config.ts';

let user = {
  firstName: '',
  lastName: '',
  username: '',
  steamUsername: '',
  // Añade más campos según sea necesario
};

async function fetchUserProfile() {
  try {
    const response = await fetch(`${API_BASE_URL}/user/profile`);
    user = await response.json();
  } catch (error) {
    console.error('Error fetching user profile:', error);
  }
}

await fetchUserProfile();
---

<Layout title="Perfil de Usuario - GameLib">
  <main class="container mx-auto mt-8">
    <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-6">Perfil de Usuario</h1>
    <form id="profile-form" class="max-w-md mx-auto">
      <div class="mb-4">
        <label for="first-name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
        <input type="text" id="first-name" value={user.firstName} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" required>
      </div>
      <div class="mb-4">
        <label for="last-name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Apellidos</label>
        <input type="text" id="last-name" value={user.lastName} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" required>
      </div>
      <div class="mb-4">
        <label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre de Usuario</label>
        <input type="text" id="username" value={user.username} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" required>
      </div>
      <div class="mb-4">
        <label for="steam-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Usuario de Steam</label>
        <input type="text" id="steam-username" value={user.steamUsername} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5">
      </div>
      <!-- Añade más campos según sea necesario -->
      <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:focus:ring-blue-900">Guardar</button>
      <button type="button" id="sync-games-button" class="text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:focus:ring-green-900 ml-4">Sincronizar Juegos</button>
    </form>
  </main>
</Layout>

<script is:inline>
  const API_BASE_URL = `${window.location.protocol}//${window.location.hostname}:3000`;

  document.getElementById('profile-form').addEventListener('submit', async (event) => {
    event.preventDefault();

    const userProfile = {
      firstName: document.getElementById('first-name').value,
      lastName: document.getElementById('last-name').value,
      username: document.getElementById('username').value,
      steamUsername: document.getElementById('steam-username').value,
      // Añade más campos según sea necesario
    };

    try {
      const response = await fetch(`${API_BASE_URL}/user/profile`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(userProfile),
      });

      if (response.ok) {
        alert('Perfil actualizado con éxito');
      } else {
        alert('Error al actualizar el perfil');
      }
    } catch (error) {
      console.error('Error al actualizar el perfil:', error);
      alert('Error al actualizar el perfil');
    }
  });

  document.getElementById('sync-games-button').addEventListener('click', async () => {
    try {
      const response = await fetch(`${API_BASE_URL}/user/sync-games`, {
        method: 'POST',
      });

      if (response.ok) {
        alert('Juegos sincronizados con éxito');
      } else {
        alert('Error al sincronizar los juegos');
      }
    } catch (error) {
      console.error('Error al sincronizar los juegos:', error);
      alert('Error al sincronizar los juegos');
    }
  });
</script>