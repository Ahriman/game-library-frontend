---
import Layout from '@/layouts/Layout.astro';
import { API_BASE_URL } from '@/config/config.ts';
import ProtectedRoute from '@/components/ProtectedRoute.astro';

let user = {
  firstName: '',
  lastName: '',
  username: '',
  steamUsername: '',
  // Añade más campos según sea necesario
};

async function fetchUserProfile() {
  try {
    const response = await fetch(`${API_BASE_URL}/user/profile`);
    user = await response.json();
  } catch (error) {
    console.error('Error fetching user profile:', error);
  }
}

await fetchUserProfile();
---
<ProtectedRoute>
  <Layout title="Perfil de Usuario - GameLib">
    <div class="flex items-center justify-center">
      <div class="w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow dark:bg-gray-800">
        <h2 class="text-2xl font-bold text-center text-gray-900 dark:text-white">Perfil de Usuario</h2>
        <form id="profile-form" class="space-y-6">
          <div>
            <label for="first-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Nombre</label>
            <input type="text" id="first-name" value={user.firstName} class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white" required>
          </div>
          <div>
            <label for="last-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Apellidos</label>
            <input type="text" id="last-name" value={user.lastName} class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white" required>
          </div>
          <div>
            <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Nombre de Usuario</label>
            <input type="text" id="username" value={user.username} class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white" required>
          </div>
          <div>
            <label for="steam-username" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Usuario de Steam</label>
            <input type="text" id="steam-username" value={user.steamUsername} class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
          </div>
          <!-- Añade más campos según sea necesario -->
          <button type="submit" class="w-full px-4 py-2 font-bold text-white bg-blue-500 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">Guardar</button>
          <button type="button" id="sync-games-button" class="w-full px-4 py-2 font-bold text-white bg-green-500 rounded-lg hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 mt-4">Sincronizar Juegos</button>
        </form>
      </div>
    </div>
  </Layout>
</ProtectedRoute>

<script is:inline>
  const API_BASE_URL = `${window.location.protocol}//${window.location.hostname}:3000`;

  document.getElementById('profile-form').addEventListener('submit', async (event) => {
    event.preventDefault();

    const userProfile = {
      firstName: document.getElementById('first-name').value,
      lastName: document.getElementById('last-name').value,
      username: document.getElementById('username').value,
      steamUsername: document.getElementById('steam-username').value,
      // Añade más campos según sea necesario
    };

    try {
      const response = await fetch(`${API_BASE_URL}/user/profile`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(userProfile),
      });

      if (response.ok) {
        alert('Perfil actualizado con éxito');
      } else {
        alert('Error al actualizar el perfil');
      }
    } catch (error) {
      console.error('Error al actualizar el perfil:', error);
      alert('Error al actualizar el perfil');
    }
  });

  document.getElementById('sync-games-button').addEventListener('click', async () => {
    try {
      const response = await fetch(`${API_BASE_URL}/user/sync-games`, {
        method: 'POST',
      });

      if (response.ok) {
        alert('Juegos sincronizados con éxito');
      } else {
        alert('Error al sincronizar los juegos');
      }
    } catch (error) {
      console.error('Error al sincronizar los juegos:', error);
      alert('Error al sincronizar los juegos');
    }
  });
</script>