---
import Layout from '../layouts/Layout.astro';
import { API_BASE_URL } from '@/config/config.ts';

const handleRegister = async (event: Event) => {
  event.preventDefault();
  const formData = new FormData(event.target as HTMLFormElement);
  const data = Object.fromEntries(formData.entries());

  try {
    const response = await fetch(`${API_BASE_URL}/auth/register`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });

    if (response.ok) {
      alert('Registro exitoso. Por favor, inicia sesión.');
      window.location.href = '/login';
    } else {
      const errorData = await response.json();
      alert(`Error: ${errorData.message}`);
    }
  } catch (error) {
    console.error('Error al registrar:', error);
    alert('Error al registrar.');
  }
};
---

<Layout title="Registro">
  <div class="flex items-center justify-center">
    <div class="w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow dark:bg-gray-800">
      <h2 class="text-2xl font-bold text-center text-gray-900 dark:text-white">Crear una cuenta</h2>
      <form id="registerForm" class="space-y-6">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Correo electrónico</label>
          <input type="email" id="email" name="email" required autofocus class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
        </div>
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Contraseña</label>
          <input type="password" id="password" name="password" required class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
        </div>
        <details class="group">
          <summary class="w-full px-4 py-2 font-bold text-white bg-gray-500 rounded-lg cursor-pointer group-open:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500">
            <span class="group-open:hidden">Añadir campos opcionales</span>
            <span class="hidden group-open:inline">Ocultar campos opcionales</span>
          </summary>
          <div class="mt-4 space-y-4">
            <div>
              <label for="first_name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Nombre <span class="text-gray-500">(opcional)</span></label>
              <input type="text" id="first_name" name="first_name" class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
            </div>
            <div>
              <label for="last_name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Apellidos <span class="text-gray-500">(opcional)</span></label>
              <input type="text" id="last_name" name="last_name" class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
            </div>
            <div>
              <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Nombre de usuario <span class="text-gray-500">(opcional)</span></label>
              <input type="text" id="username" name="username" class="w-full px-3 py-2 mt-1 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
            </div>
          </div>
        </details>
        <button type="submit" class="w-full px-4 py-2 font-bold text-white bg-blue-500 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">Registrarse</button>
      </form>
      <p class="text-sm text-center text-gray-600 dark:text-gray-400">¿Ya tienes una cuenta? <a href="/login" class="text-blue-500 hover:underline">Inicia sesión</a></p>
    </div>
  </div>
</Layout>


<script is:inline define:vars={{API_BASE_URL}}>
  document.getElementById('registerForm').addEventListener('submit', async (event) => {
    event.preventDefault();
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData.entries());

    try {
      const response = await fetch(`${API_BASE_URL}/auth/register`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        alert('Registro exitoso. Por favor, inicia sesión.');
        window.location.href = '/login';
      } else {
        const errorData = await response.json();
        alert(`Error: ${errorData.message}`);
      }
    } catch (error) {
      console.error('Error al registrar:', error);
      alert('Error al registrar.');
    }
  });
</script>
